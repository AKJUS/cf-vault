on: [pull_request]
name: Test
env:
  GOPROXY: "https://proxy.golang.org"
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.17, 1.18]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Format
        run: gofmt -d .
      - name: Lint
        if: matrix.os != 'windows-latest'
        run: |
          go generate -tags tools tools/tools.go
          $(go env GOPATH)/bin/golint -set_exit_status .
      - name: Vet
        run: go vet
      - name: Test
        run: go test -v -race ./...
